{% extends 'LaPoizWindBundle:FrontOffice:base.html.twig' %}

{% block javascriptsHeader %}
    <script src="{{ asset('bundles/lapoizgraph/js/moment.min.js') }}"></script>
    <script src="https://maps.googleapis.com/maps/api/js"></script>
    <script type="text/javascript" src="http://google-maps-utility-library-v3.googlecode.com/svn/trunk/markerwithlabel/src/markerwithlabel.js"></script>

{% endblock %}

{% block bodyPage %}

    <div class="row">
        <div class="col-md-12">
            <h2>Cartes des prévisions des spots <span id="loading"></span></h2>

            <SELECT id="selectDates" NAME="Date"></SELECT>

            {% for webSite in listSites %}
                <input type="checkbox" name="check_site" id="check_site_{{ webSite.id }}" value="{{ webSite.nom }}" checked />
                <label for="check_site_{{ webSite.id }}">{{ webSite.nom }}</label>
            {% endfor %}

            <div id="sitesMap"></div>

        </div>
    </div>

    <script>

        var listeSpotsMarker;
        var infoBulle;
        var numDaySelected=0;
        var linkPrevisionSpot="{{ path('_fo_spot_graph', {'id':'__idSpot__'}) }}";
        var isMapInitilize = false;

        var spotsList = {"spots":[
            {% for spot in listSpot %}
                { "nom":"{{ spot.nom }}", "id":{{ spot.id }}, "lat":{{ spot.gpsLat }}, "lng": {{ spot.gpsLong }} },
            {% endfor %}
        ]};
        var isSpotsListLoading=false;

        var select = $('#selectDates');
        for (i=0;i<7;i++) {
            var day = moment().add(i,'days').format('dddd');
            var option = new Option(day,i);
            select.append($(option));
        }


        select.change(function() {
            //console.log("date change");
            var str = "";
            $( "select option:selected" ).each(function() {
                  numDaySelected=$( this ).val();
                  loadDateData(spotsList);
            });}
        ).trigger( "change" );

        var webSiteSelected=[{% for webSite in listSites %} "{{ webSite.nom }}", {% endfor %}];
        // Manage la selection des sites Internet
        $("[name='check_site']").change(function(){
            webSiteSelected=[];
            $("input[name='check_site']:checked").each(function(){
                webSiteSelected.push($(this).val());
            })
            loadDateData(spotsList);
        });

        var map;

        function initialize() {
            //console.log("initialize");
            isMapInitilize=true;
            var mapOptions = {
                zoom: 6,
                center: {lat: 47.090039, lng: 2.377031},
                mapTypeId: google.maps.MapTypeId.TERRAIN
            };
            map = new google.maps.Map(document.getElementById('sitesMap'),
                    mapOptions);
            createMarker();
            loadDateData(spotsList);
        }


        function createMarker() {
            //console.log("createMarker");
            if (typeof(listeSpotsMarker) === "undefined") {
                var spotMarker = {
                    path: 'M 3 -7 A 10 10, 0, 1, 0, -3 -7 L 0 0 Z',
                    fillColor: 'white',
                    fillOpacity: 0.8,
                    scale: 1,
                    strokeColor: 'gray',
                    strokeWeight: 1
                };
                listeSpotsMarker = [];
                infoBulle = [];

                for (index = 0; index < spotsList.spots.length; index++) {
                    var spot = spotsList.spots[index];

                    listeSpotsMarker[spot.id] = new MarkerWithLabel({
                        position: spot,
                        draggable: false,
                        icon: spotMarker,
                        map: map,
                        labelAnchor: new google.maps.Point(10, 21.5),
                        labelClass: "mapIconLabel", // the CSS class for the label
                        labelContent: "?",
                        labelStyle: {opacity: 0.75}
                    });

                    listeSpotsMarker[spot.id].infoBulleContent = '<h3>' + spot.nom + '</h3>';

                    var infoBulle = new google.maps.InfoWindow();
                    var marker = listeSpotsMarker[spot.id];
                    google.maps.event.addListener(marker,'mouseover', (function(){
                        infoBulle.setContent(this.infoBulleContent);
                        infoBulle.open(map,this);
                    }));

                }
            }
        }

        function loadJSON() {
            //console.log("loadJSON");
            $('#loading').html('<img src="{{ asset('bundles/lapoizwind/images/loading.gif') }}" alt="Loading Ajax data" />');
            $.ajax({
                url: "{{ path('_fo_ajax_sites_info_prev') }}",
                type: "GET",
                success: function(jsonResult) {
                    spotsList=jsonResult;
                    isSpotsListLoading=true;
                    loadDateData(spotsList);
                    $('#loading').html('');
                }
            });
        };

        function loadDateData(spotsList) {
            //console.log("loadDateData");
            if (isMapInitilize) {
                if (typeof(listeSpotsMarker) === "undefined") {
                    createMarker();
                }
                if (!isSpotsListLoading) {
                    loadJSON();
                } else {
                    $.each(spotsList, function (idSpot, spotData) {
                        // selon la selection du site webSiteSelected
                        //console.log("nom : "+spotData.nom);
                        try {
                            var spotDataDay = spotData.nbHourNav[numDaySelected];
                            var nbH = getNbHoure(spotDataDay["websites"], webSiteSelected);
                            var labelContent;
                            //console.log("nbH : "+nbH);
                            if (nbH < 0) {
                                // ?
                                listeSpotsMarker[spotData.id].icon.fillColor = "white";
                                listeSpotsMarker[spotData.id].icon.strokeColor = "gray";
                                labelContent = "?";
                            } else if (nbH < 4) {
                                // RED
                                listeSpotsMarker[spotData.id].icon.fillColor = "pink";
                                listeSpotsMarker[spotData.id].icon.strokeColor = "red";
                                labelContent = nbH + "h";

                            } else if (nbH < 7) {
                                // ORANGE
                                listeSpotsMarker[spotData.id].icon.fillColor = "orange";
                                listeSpotsMarker[spotData.id].icon.strokeColor = "red";
                                labelContent = nbH + "h";
                            } else {
                                listeSpotsMarker[spotData.id].icon.fillColor = "LightGreen";
                                listeSpotsMarker[spotData.id].icon.strokeColor = "green";
                                labelContent = nbH + "h";
                            }

                            listeSpotsMarker[spotData.id].labelContent = labelContent;

                            listeSpotsMarker[spotData.id].setShape();
                            listeSpotsMarker[spotData.id].label.setContent();

                            listeSpotsMarker[spotData.id].infoBulleContent = createInfoBullContent(spotData, spotDataDay, nbH);
                        } catch (ex) {
                            console.error("Exception: ", ex.message);
                        }
                    });
                }
            }
        }

        /**
         * @param spotData: contenant pour tous les prochains jours, le nbHeure de nav prévu par chaque website
         * @param webSiteSelected: tableau des websites dont on veut les infos
         * @param numDaySelected: numero du jour séléctionné = index de la date de nbHourNav
         */
        function getNbHoure(nbHoureAllWebSites,webSiteSelected) {
            // JSON: http://localhost/Wind/web/app_dev.php/fo/ajax/sites/prev
            //alert(JSON.stringify(nbHoureAllWebSites));
            if (nbHoureAllWebSites!==null) {
                nbWebsite=0;
                nbH=0;

                for (iWebSite = 0; iWebSite < webSiteSelected.length; iWebSite++) {
                    if (nbHoureAllWebSites[webSiteSelected[iWebSite]]!== undefined) {
                        nbH+=parseFloat(nbHoureAllWebSites[webSiteSelected[iWebSite]]);
                        nbWebsite++;
                    }
                }
                if (nbWebsite===0) {
                    return -1;
                } else {
                    return (Math.round(nbH/nbWebsite));
                }
            } else {
                return -1;
            }
        }

        /**
         *
         * @param spotData
         * @param spotDataDay
         * @param nbH: nopmbre d'heure de navigation entre 8h à 20h
         * @returns {string}
         */
        function createInfoBullContent(spotData,spotDataDay, nbH) {
            return '<h3>'+spotData.nom+'</h3>'+
                    '<a href="'+linkPrevisionSpot.replace('__idSpot__',spotData.id)+'">Prévisions du spot</a>'+
                    '<p class="textMapInfoBulle">Nb d\'heure de navigation: '+nbH+'h<br />'+
                    '<span class="infoBullAide">Sur 12h possible (de 8h à 20h).</span></p>'+
                    '<p class="textMapInfoBulle">Temp. de l\'aire: de '+spotDataDay["tempMin"]+' à '+spotDataDay["tempMax"]+'°C<br />'+
                    'Temp. de l\'eau: '+spotDataDay["tempWater"]+'°C</p>';
        }


        // Call the initialize function after the page has finished loading
        google.maps.event.addDomListener(window, 'load', initialize);

    </script>



{% endblock %}