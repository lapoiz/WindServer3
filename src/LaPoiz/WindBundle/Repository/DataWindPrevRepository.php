<?php

namespace LaPoiz\WindBundle\Repository;

use Doctrine\ORM\EntityRepository;
use LaPoiz\WindBundle\Entity\Spot;
use LaPoiz\WindBundle\Entity\WebSite;

/**
 * DataWindPrevRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DataWindPrevRepository extends EntityRepository
{
	
	public function getLastCreated()
	{
		$queryBuilder = $this->createQueryBuilder('dataWindPrev');
		$queryBuilder->orderBy('dataWindPrev.created')
			->setMaxResults(1);
			
		try {
			return $queryBuilder->getQuery()->getSingleResult();
		} catch (\Doctrine\ORM\NoResultException $e) {
			return null;
		}
	}

	public function getWithWebsiteAndSpot(WebSite $website, Spot $spot)
	{
		$queryBuilder = $this->createQueryBuilder('dataWindPrev')
				->leftJoin('dataWindPrev.spot', 'spot')
				->leftJoin('dataWindPrev.website', 'website')
				->where("spot.id=".$spot->getId())
				->andWhere("website.id=".$website->getId())
				->setMaxResults(1);
		try {
			return $queryBuilder->getQuery()->getSingleResult();
		} catch (\Doctrine\ORM\NoResultException $e) {
			return null;
		}
	}

	// same as spot->getDataWindPrev() ????
	public  function getFromSpot($spot) {
		$queryBuilder = $this->createQueryBuilder('dataWindPrev');
		$queryBuilder->orderBy('dataWindPrev.created')
			->setMaxResults(50);

		if ($spot!=null) {
			$queryBuilder
			->leftJoin('dataWindPrev.spot', 'spot')
			->where("spot.id=".$spot->getId());
			//->where($queryBuilder->expr().eq('dataWindPrev.spot_id',$spot.id));
			
			try {
				return $queryBuilder->getQuery()->getResult();
			} catch (\Doctrine\ORM\NoResultException $e) {
				return null;
			}
		} else {
			return null;
		}
	}
}