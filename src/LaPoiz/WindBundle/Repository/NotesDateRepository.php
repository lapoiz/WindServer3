<?php

namespace LaPoiz\WindBundle\Repository;

use Doctrine\ORM\EntityRepository;

use LaPoiz\WindBundle\Entity\Spot;

/**
 * NotesDateRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class NotesDateRepository extends EntityRepository
{

    // NEVER USED
    public function getFutureNotesDate($spot)
    {
        $queryBuilder = $this->createQueryBuilder('notesDate');
        $queryBuilder
            ->select('notesDate')
            ->leftJoin('notesDate.spot', 'spot')
            ->where("notesDate.datePrev >= :datecourant and spot.id = :spotId")
                ->setParameters(array(
                    'datecourant'=> new \Datetime(date('d-m-Y')),
                    'spotId' => $spot->getId()
                ))
            ->addOrderBy('notesDate.datePrev', 'ASC');
        try {
            return $queryBuilder->getQuery()->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }

    // NEVER USED
    public function getOldNotesDate($spot)
    {
        $queryBuilder = $this->createQueryBuilder('notesDate');
        $queryBuilder
            ->leftJoin('notesDate.spot', 'spot')
            ->where("notesDate.datePrev < :datecourant and spot.id = :spotId")
            ->setParameters(array(
                'datecourant'=> new \Datetime(date('d-m-Y')),
                'spotId' => $spot->getId()
            ))
            ->addOrderBy('notesDate.datePrev', 'ASC');
        try {
            return $queryBuilder->getQuery()->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }

    // NEVER USED
    public function getNotesDateForDatePrev($spot, $datePrev) {
        $queryBuilder = $this->createQueryBuilder('notesDate');
        $queryBuilder
            ->select('notesDate')
            ->leftJoin('notesDate.spot', 'spot')
            ->where($queryBuilder->expr()->eq("notesDate.datePrev",":datePrev"))
            ->andWhere("spot.id = :spotId")
            ->setParameters(array(
                'datePrev'=> $datePrev->format('Y-m-d'),
                'spotId' => $spot->getId()
            ));
        try {
            return $queryBuilder->getQuery()->getOneOrNullResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
}
